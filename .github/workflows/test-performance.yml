# For more information see:
# https://pytest-benchmark.readthedocs.io

name: Test Performance

on:
  # TODO: make manual only
  pull_request:
    branches: ["*"]
  workflow_dispatch:

jobs:
  test:
    name: indicators
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x
          dotnet-quality: "ga"

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
          cache: "pip"

      - name: Setup GitVersion
        uses: gittools/actions/gitversion/setup@v3.1.1
        with:
          versionSpec: '6.0.5'

      - name: Execute GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v3.1.1

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install -r requirements-test.txt

      - name: Test performance
        run: >
          pytest benchmarks
          --benchmark-json=benchmark_data.json
          --benchmark-sort=name

      - name: Publish test results
        run: |
          # Collect system info
          echo "### Package version ${{ steps.gitversion.outputs.fullSemVer }}" > report.md
          echo "\nTest environment:" >> report.md
          echo "- OS: $(uname -s) $(uname -r)" >> report.md
          echo "- CPU: $(cat /proc/cpuinfo | grep 'model name' | head -n1 | cut -d':' -f2 | xargs)" >> report.md
          echo "- Memory: $(free -h | awk '/^Mem:/ {print $2}')" >> report.md
          echo "\n" >> report.md

          # Convert benchmark data to table
          python -c '
          import json
          with open("benchmark_data.json") as f:
              data = json.load(f)

          print("| Name | Mean (sec) | StdDev | Operations/sec |", file=open("report.md", "a"))
          print("|------|------------|--------| ---------------|", file=open("report.md", "a"))

          for bm in sorted(data["benchmarks"], key=lambda x: x["fullname"]):
              name = bm["fullname"]
              mean = bm["stats"]["mean"]
              stddev = bm["stats"]["stddev"]
              ops = bm["stats"]["ops"]
              print(f"| {name} | {mean:.6f} | {stddev:.6f} | {ops:.2f} |",
                    file=open("report.md", "a"))
          '

      - name: Publish benchmark results
        run: cat report.md >> $GITHUB_STEP_SUMMARY
